# Tbump configuration for lbscratch
# Run 'tbump <new_version>' to bump version and create release

[tool.tbump]
# Uncomment this if your project is hosted on GitHub:
github_url = "https://github.com/landmanbester/lbscratch"

[tool.tbump.version]
current = "0.0.1"

# Example of a semver regexp.
# Make sure this matches current_version before
# using tbump
regex = '''
  (?P<major>\d+)
  \.
  (?P<minor>\d+)
  \.
  (?P<patch>\d+)
  '''

[tool.tbump.git]
message_template = "Bump to {new_version}"
tag_template = "v{new_version}"
push = true

# For each file to patch, add a [[tool.tbump.file]] config
# section containing the path of the file, relative to the
# tbump.toml location.
[[tool.tbump.file]]
src = "lbscratch/__init__.py"
search = '__version__ = "{current_version}"'

# You can specify a list of commands to
# run after the files have been patched
# and before the git commit is made

[[tool.tbump.before_commit]]
name = "Run tests"
cmd = "uv run pytest tests/"

[[tool.tbump.before_commit]]
name = "Check code quality"
cmd = "uv run ruff check lbscratch tests"

[[tool.tbump.before_commit]]
name = "Check formatting"
cmd = "uv run ruff format --check lbscratch tests"

# Or run some commands after the git tag and the branch
# have been pushed:
[[tool.tbump.after_push]]
name = "Create GitHub release"
cmd = "gh release create v{new_version} --generate-notes --title 'Release v{new_version}'"